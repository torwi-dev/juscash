name: üöÄ Deploy Backend

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: üì¶ Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: üèóÔ∏è Build TypeScript
        working-directory: ./backend
        run: npm run build

      - name: üóÑÔ∏è Generate Prisma Client
        working-directory: ./backend
        run: npm run prisma:generate

      - name: üìã Create production package.json
        working-directory: ./backend
        run: |
          cat > package-deploy.json << 'EOF'
          {
            "name": "backend",
            "version": "1.0.0",
            "main": "dist/index.js",
            "scripts": {
              "start": "node dist/index.js",
              "postinstall": "npx prisma generate"
            },
            "engines": {
              "node": ">=18.0.0"
            },
            "dependencies": {
              "@prisma/client": "^6.9.0",
              "bcrypt": "^6.0.0",
              "bcryptjs": "^3.0.2",
              "cors": "^2.8.5",
              "dotenv": "^16.5.0",
              "express": "^5.1.0",
              "helmet": "^8.1.0",
              "jsonwebtoken": "^9.0.2",
              "morgan": "^1.10.0",
              "prisma": "^6.9.0",
              "swagger-jsdoc": "^6.2.8",
              "swagger-ui-express": "^5.0.1",
              "zod": "^3.25.57"
            }
          }
          EOF
          mv package-deploy.json package.json

      - name: üìÑ Copy web.config
        working-directory: ./backend
        run: |
          if [ -f web.config ]; then
            echo "‚úÖ web.config encontrado"
          else
            echo "‚ùå web.config n√£o encontrado - criando..."
            cat > web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="dist/index.js" verb="*" modules="iisnode"/>
              </handlers>
              <rewrite>
                <rules>
                  <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                    <match url="^dist/index.js\/debug[\/]?" />
                  </rule>
                  <rule name="StaticContent">
                    <action type="Rewrite" url="public{REQUEST_URI}"/>
                  </rule>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="dist/index.js"/>
                  </rule>
                </rules>
              </rewrite>
              <defaultDocument>
                <files>
                  <add value="dist/index.js" />
                </files>
              </defaultDocument>
            </system.webServer>
          </configuration>
          EOF
          fi

      - name: üöÄ Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'juscash-api'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./backend

      - name: ü©∫ Health Check
        run: |
          echo "‚è≥ Aguardando 90 segundos para app inicializar..."
          sleep 90
          echo "üîç Testando sa√∫de da aplica√ß√£o..."
          curl -f https://juscash-api.azurewebsites.net/health || echo "‚ùå Health check falhou - verificar logs do Azure"
          echo "‚úÖ Deploy conclu√≠do! App dispon√≠vel em: https://juscash-api.azurewebsites.net"
